{"version":3,"sources":["../../src/client/service.ts","../../src/client/client.ts","../../src/client/service/provider.ts","../../src/client/service/proto.ts","../../src/client/service/factory.ts","../../src/client/error.ts","../../src/oauth/defs.ts","../../src/client/credentials.ts","../../src/oauth/token.ts","../../src/oauth/store.ts","../../src/oauth/provider.ts","../../src/oauth/electron.ts","../../src/oauth/tools.ts","../../src/client/transport.ts","../../src/client/transport/binary.ts","../../src/client/transport/json.ts","../../src/client/transport/urlform.ts","../../src/client/request.ts","../../src/config.ts","../../src/tools/export_credentials.process.ts"],"names":["endpoint","Client","InvalidArgumentError","KV","UnsupportedError","Transport","NotFoundError","UnavailableError","UnimplementedError","GenericError","Credentials","ConcurrentPromise","HttpContentType","Json","ParseError","hideBin","yargs"],"mappings":"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","sourcesContent":["import { ApiError, GenericError, HttpHeader, InvalidArgumentError, KV, Mime, ParseError, SerializeError } from 'js-common';\nimport { ApiRequest, Client, Credentials, Transport } from '.';\nimport { Scopes } from '@/oauth';\nimport * as Storage from './storage';\n\nexport interface ServiceMethod{\n\tname: string;\n\tscopes?: Scopes;\n\tpath: string;\n\tmethod: string;\n\tbody?: string;\n\ttransport?: KV<Transport>;\n}\n\nexport interface ServiceOptions{\n\tcredentials?: Credentials[];\n\tclientOptions?: KV<any>;\n\theaders?: KV<any>;\n\tparams?: KV<any>; /* url query params */\n\thost?: string;\n\ttransport?: string;\n}\n\nfunction setKV(kv: KV<any> | undefined, from: KV<any> | undefined){\n\tif(!from)\n\t\treturn kv;\n\tif(!kv)\n\t\treturn from;\n\tfor(let [key, value] of KV.entries(from))\n\t\tkv[key] = value;\n\treturn kv;\n}\n\nfunction setKVone(kv: KV<any> | undefined, key: string, value: any){\n\tif(!kv)\n\t\tkv = {};\n\tkv[key] = value;\n\n\treturn kv;\n}\n\nexport class Service{\n\treadonly name;\n\treadonly id;\n\treadonly client;\n\treadonly scopes;\n\treadonly host;\n\treadonly transport;\n\treadonly basePath;\n\treadonly version;\n\treadonly methods;\n\treadonly headers;\n\treadonly params;\n\treadonly options: KV<any>;\n\n\tconstructor(service: Storage.Service, client: Client, methods: KV<ServiceMethod>, options?: ServiceOptions){\n\t\tthis.name = service.name;\n\t\tthis.id = service.id;\n\t\tthis.client = client;\n\t\tthis.options = {};\n\n\t\tif(service.scopes)\n\t\t\tthis.scopes = service.scopes;\n\t\tif(service.basePath)\n\t\t\tthis.basePath = service.basePath;\n\t\tif(service.version)\n\t\t\tthis.version = service.version;\n\t\tthis.methods = methods;\n\n\t\tif(options?.credentials)\n\t\t\tthis.options.credentials = options.credentials;\n\t\tlet headers = options?.headers;\n\t\tlet params = options?.params;\n\n\t\tlet {endpoint, transport} = this.selectTransport(service, options);\n\n\t\tthis.host = endpoint?.host;\n\t\tthis.transport = transport;\n\n\t\theaders = setKV(headers, endpoint.headers);\n\t\tparams = setKV(params, endpoint.params);\n\n\t\tif(options?.clientOptions){\n\t\t\tlet clientOpts = this.processClientOptions(options.clientOptions);\n\n\t\t\theaders = setKV(headers, clientOpts.headers);\n\t\t\tparams = setKV(params, clientOpts.params);\n\n\t\t\tthis.options = setKV(this.options, clientOpts.options)!;\n\t\t}\n\n\t\tthis.headers = headers;\n\t\tthis.params = params;\n\t}\n\n\tprivate selectTransport(service: Storage.Service, options?: {\n\t\thost?: string;\n\t\ttransport?: string;\n\t}){\n\t\tlet endpoint: Storage.ServiceEndpoint | undefined;\n\t\tlet transport: string | undefined;\n\n\t\tif(options?.host){\n\t\t\tendpoint = service.endpoints.find(endpoint => endpoint.host == options.host);\n\n\t\t\tif(!endpoint)\n\t\t\t\tthrow new InvalidArgumentError(`Service endpoint '${options.host}' does not exist`);\n\t\t}\n\n\t\tif(options?.transport){\n\t\t\tif(!service.endpoints.length)\n\t\t\t\tthrow new InvalidArgumentError(`Cannot set transport '${options.transport}' without an endpoint`);\n\t\t\tif(!endpoint){\n\t\t\t\tendpoint = service.endpoints.find(endpoint => endpoint.transport.includes(options.transport!));\n\n\t\t\t\tif(!endpoint)\n\t\t\t\t\tthrow new InvalidArgumentError(`Transport '${options.transport}' not supported by any endpoint`);\n\t\t\t}else if(!endpoint.transport.includes(options.transport)){\n\t\t\t\tthrow new InvalidArgumentError(`Transport '${options.transport}' not supported, options are: ${endpoint.transport.join(', ')}`)\n\t\t\t}\n\n\t\t\ttransport = options.transport;\n\t\t}\n\n\t\tif(!endpoint)\n\t\t\tendpoint = service.endpoints[0];\n\t\tif(endpoint && !transport)\n\t\t\ttransport = endpoint.transport[0];\n\t\treturn {\n\t\t\tendpoint,\n\t\t\ttransport,\n\t\t};\n\t}\n\n\tprivate processClientOptions(clientOptions: KV<any>){\n\t\tlet headers;\n\t\tlet params;\n\t\tlet options;\n\n\t\tfor(let key in clientOptions){\n\t\t\tif(!this.client.options || !(key in this.client.options))\n\t\t\t\tthrow new InvalidArgumentError(`Client option '${key}' not found`);\n\t\t\tlet option = this.client.options[key];\n\t\t\tlet value = clientOptions[key];\n\n\t\t\tif(option.enum && !option.enum.includes(value))\n\t\t\t\tthrow new InvalidArgumentError(`Client option '${key}' must be one of [${option.enum.join(', ')}], got '${value}'`);\n\t\t\tif(option.header)\n\t\t\t\theaders = setKVone(headers, option.header, value);\n\t\t\telse if(option.query)\n\t\t\t\tparams = setKVone(params, option.query, value);\n\t\t\telse\n\t\t\t\toptions = setKVone(options, key, value);\n\t\t}\n\n\t\treturn {\n\t\t\theaders,\n\t\t\tparams,\n\t\t\toptions\n\t\t};\n\t}\n\n\tprotected preflight(){\n\t\tif(!this.host)\n\t\t\tthrow new InvalidArgumentError(`Service '${this}' cannot be used without a valid host`);\n\t\tif(!this.transport)\n\t\t\tthrow new InvalidArgumentError(`Service '${this}' cannot be used without a valid transport`);\n\t}\n\n\tprotected getFullPath(path: string){\n\t\tlet fullPath = [];\n\n\t\tif(this.basePath)\n\t\t\tfullPath.push(this.basePath);\n\t\tif(this.version)\n\t\t\tfullPath.push(this.version);\n\t\tfullPath.push(path);\n\n\t\treturn fullPath.join('/');\n\t}\n\n\tprotected async transact(method: string, path: string, transport: Transport, contentType: string | undefined, message: any){\n\t\tlet request = new ApiRequest();\n\n\t\trequest.setMethod(method);\n\t\trequest.url.setHost(this.host);\n\t\trequest.url.setPath(path);\n\n\t\tif(this.params)\n\t\t\trequest.url.setParams(this.params);\n\t\trequest.setHeader(HttpHeader.CONTENT_TYPE, contentType);\n\n\t\tif(this.headers)\n\t\t\trequest.setHeaders(this.headers);\n\t\ttry{\n\t\t\trequest.body = transport.encode(message);\n\t\t}catch(e){\n\t\t\tif(!(e instanceof GenericError))\n\t\t\t\tthrow new SerializeError(e);\n\t\t\tthrow e;\n\t\t}\n\n\t\tlet response = await this.client.request(request, this.options);\n\n\t\tif(transport.response !== undefined){\n\t\t\tlet type = response.headers.get(HttpHeader.CONTENT_TYPE);\n\n\t\t\tif(!type || (type !== transport.response && !Mime.typeEquals(type, transport.response)))\n\t\t\t\tthrow new ApiError(`Expected content type '${transport.response}' but got '${type}'`);\n\t\t}\n\n\t\ttry{\n\t\t\treturn transport.decode(response.body);\n\t\t}catch(e){\n\t\t\tif(!(e instanceof GenericError))\n\t\t\t\tthrow new ParseError(e);\n\t\t\tthrow e;\n\t\t}\n\t}\n\n\ttoString(){\n\t\treturn this.id;\n\t}\n}","import { KV, Response, UnimplementedError } from 'js-common';\nimport { ApiRequest } from './request';\nimport * as Storage from './storage';\n\nexport class Client{\n\treadonly name;\n\treadonly id;\n\treadonly options?: KV<Storage.ClientOption>;\n\treadonly xssi?: KV;\n\n\tconstructor(client: Storage.Client){\n\t\tthis.name = client.name;\n\t\tthis.id = client.id;\n\t\tthis.options = client.options;\n\t\tthis.xssi = client.xssi;\n\t}\n\n\trequest(request: ApiRequest, options?: KV<any>): Promise<Response>{\n\t\tvoid request;\n\t\tvoid options;\n\n\t\tthrow new UnimplementedError();\n\t}\n}","import { InvalidArgumentError, KV, NotFoundError } from 'js-common';\nimport { Service, ServiceMethod, ServiceOptions, Client, Transport } from '..';\nimport { ProtoServiceDefinition } from './proto';\nimport { ServiceFactory } from './factory';\nimport { camel } from 'case';\nimport * as Storage from '../storage';\n\ninterface ServiceEntry{\n\tdefinition: Storage.Service;\n\tmethods: KV<ServiceMethod>;\n\timplementation: typeof Service;\n}\n\nexport class ServiceProvider{\n\tprivate clients;\n\tprivate transports;\n\tprivate services;\n\n\tconstructor(){\n\t\tthis.clients = new Map<string, Client>();\n\t\tthis.transports = new Map<string, Transport>();\n\t\tthis.services = new Map<string, ServiceEntry>();\n\t}\n\n\tprivate methodsFrom(methods: Storage.ServiceMethod[]){\n\t\tlet out: KV<ServiceMethod> = {};\n\n\t\tfor(let method of methods){\n\t\t\tlet name = camel(method.name);\n\t\t\tlet transport: KV<Transport> = {};\n\n\t\t\tfor(let type of method.transport){\n\t\t\t\tlet impl = this.transports.get(type);\n\n\t\t\t\tif(!impl)\n\t\t\t\t\timpl = Transport.from(type);\n\t\t\t\tif(impl)\n\t\t\t\t\ttransport[type] = impl;\n\t\t\t}\n\n\t\t\tout[name] = {\n\t\t\t\tname: method.name,\n\t\t\t\tscopes: method.scopes,\n\t\t\t\tpath: method.path,\n\t\t\t\tmethod: method.method,\n\t\t\t\tbody: method.body,\n\t\t\t\ttransport\n\t\t\t};\n\t\t}\n\n\t\treturn out;\n\t}\n\n\tregisterClients(clients: Storage.Client[]){\n\t\tfor(let client of clients){\n\t\t\tlet ctor = client.implementation ?? Client;\n\n\t\t\tdelete client.implementation;\n\n\t\t\tlet instance = new ctor(client as any);\n\n\t\t\tthis.clients.set(instance.id, instance);\n\t\t}\n\t}\n\n\tregisterServices(services: Storage.Service[]){\n\t\tfor(let service of services){\n\t\t\tlet methods: KV<ServiceMethod> = {};\n\n\t\t\tif(service.implementation){\n\t\t\t\tif(service.methods)\n\t\t\t\t\tthrow new InvalidArgumentError(`Service cannot have both 'implementation' and 'methods'`);\n\t\t\t\tlet definition = service.implementation;\n\n\t\t\t\tif(definition.protoOverREST)\n\t\t\t\t\tmethods = ProtoServiceDefinition.methodsFrom(definition.protoOverREST);\n\t\t\t\telse if(definition.gRPC)\n\t\t\t\t\tmethods = ProtoServiceDefinition.methodsFrom(definition.gRPC);\n\t\t\t\tdelete service.implementation;\n\t\t\t}else if(service.methods){\n\t\t\t\tmethods = this.methodsFrom(service.methods);\n\t\t\t}\n\n\t\t\tthis.services.set(service.id, {\n\t\t\t\tdefinition: service as any,\n\t\t\t\tmethods,\n\t\t\t\timplementation: ServiceFactory.create(service as any, methods)\n\t\t\t});\n\t\t}\n\t}\n\n\tregisterTransports(transports: Storage.Transport[]){\n\t\tfor(let transport of transports)\n\t\t\tthis.transports.set(transport.id, transport.implementation);\n\t}\n\n\tcreate(id: string, options?: ServiceOptions): any{\n\t\tlet service = this.services.get(id);\n\n\t\tif(!service)\n\t\t\tthrow new NotFoundError(`Service '${id}' not found`);\n\t\tlet client = this.clients.get(service.definition.client);\n\n\t\tif(!client)\n\t\t\tthrow new NotFoundError(`Client '${service.definition.client}' not found`);\n\t\treturn new service.implementation(service.definition, client, service.methods, options);\n\t}\n}\n\nexport const DefaultServiceProvider = new ServiceProvider();","import { HttpContentType, HttpMethod, Json, KV, UnsupportedError } from 'js-common';\nimport { Reader, Writer } from 'protobufjs/minimal';\nimport { ServiceMethod, Transport } from '..';\n\nimport { MethodOptions, MethodOptions_IdempotencyLevel } from 'protobuf-ts/protos/google/protobuf/descriptor';\nimport { http } from 'protobuf-ts/protos/google/api/annotations';\n\nexport interface ProtoMessage<T = any>{\n\tencode(message: T, writer?: Writer): Writer;\n\tdecode(input: Reader | Uint8Array | Array<number> | ArrayBufferLike, length?: number): T;\n\tfromJSON(object: any): T;\n\ttoJSON(object: T): any;\n}\n\nexport interface ProtoUnknownFields{\n\treadonly [tag: number]: readonly Buffer[];\n}\n\nexport interface ProtoMethodOptions{\n\treadonly idempotencyLevel?: MethodOptions_IdempotencyLevel;\n\treadonly _unknownFields?: ProtoUnknownFields;\n}\n\nexport interface ProtoServiceMethod{\n\treadonly name: string;\n\treadonly requestType: ProtoMessage;\n\treadonly requestStream: boolean;\n\treadonly responseType: ProtoMessage;\n\treadonly responseStream: boolean;\n\treadonly options: ProtoMethodOptions;\n}\n\nexport interface ProtoServiceDefinition{\n\treadonly name: string;\n\treadonly fullName: string;\n\treadonly methods: KV<ProtoServiceMethod>;\n}\n\nfunction transportFrom(method: ProtoServiceMethod){\n\tlet transport: KV<Transport> = {};\n\n\ttransport[HttpContentType.PROTOBUF] = {\n\t\trequest: HttpContentType.PROTOBUF,\n\t\tresponse: HttpContentType.PROTOBUF,\n\n\t\tencode: (message) => method.requestType.encode(message).finish(),\n\t\tdecode: (message) => method.responseType.decode(message)\n\t};\n\n\ttransport[HttpContentType.PROTOBUFFER] = {\n\t\trequest: HttpContentType.PROTOBUFFER,\n\t\tresponse: HttpContentType.PROTOBUFFER,\n\n\t\tencode: (message) => method.requestType.encode(message).finish(),\n\t\tdecode: (message) => method.responseType.decode(message)\n\t};\n\n\ttransport[HttpContentType.JSON] = {\n\t\trequest: HttpContentType.JSON,\n\t\tresponse: HttpContentType.JSON,\n\n\t\tencode: (message) => Json.encode(method.requestType.toJSON(message)),\n\t\tdecode: (message) => method.responseType.fromJSON(Json.decode(message))\n\t};\n\n\treturn transport;\n}\n\nexport class ProtoServiceDefinition{\n\tprivate constructor(){}\n\n\tstatic methodsFrom(definition: ProtoServiceDefinition){\n\t\tlet methods: KV<ServiceMethod> = {};\n\n\t\tfor(let methodName in definition.methods){\n\t\t\tlet method = definition.methods[methodName];\n\t\t\tlet httpRule = MethodOptions.getExtension(method.options as any, http);\n\n\t\t\tif(!httpRule)\n\t\t\t\tthrow new UnsupportedError(`Service method ${method.name} has no 'httpRule'`);\n\t\t\tlet serviceMethod: Partial<ServiceMethod> = {\n\t\t\t\tname: method.name,\n\t\t\t\tscopes: [],\n\t\t\t\ttransport: transportFrom(method)\n\t\t\t};\n\n\t\t\tif(httpRule.get){\n\t\t\t\tserviceMethod.method = HttpMethod.GET;\n\t\t\t\tserviceMethod.path = httpRule.get;\n\t\t\t}else if(httpRule.put){\n\t\t\t\tserviceMethod.method = HttpMethod.PUT;\n\t\t\t\tserviceMethod.path = httpRule.put;\n\t\t\t}else if(httpRule.post){\n\t\t\t\tserviceMethod.method = HttpMethod.POST;\n\t\t\t\tserviceMethod.path = httpRule.post;\n\t\t\t}else if(httpRule.delete){\n\t\t\t\tserviceMethod.method = HttpMethod.DELETE;\n\t\t\t\tserviceMethod.path = httpRule.delete;\n\t\t\t}else if(httpRule.patch){\n\t\t\t\tserviceMethod.method = HttpMethod.PATCH;\n\t\t\t\tserviceMethod.path = httpRule.patch;\n\t\t\t}else if(httpRule.custom){\n\t\t\t\tserviceMethod.method = httpRule.custom.kind;\n\t\t\t\tserviceMethod.path = httpRule.custom.path;\n\t\t\t}\n\n\t\t\tmethods[methodName] = serviceMethod as ServiceMethod;\n\t\t}\n\n\t\treturn methods;\n\t}\n}","import { KV, UnsupportedError } from 'js-common';\nimport { Service, ServiceMethod } from '../service';\nimport { Transport } from '../transport';\nimport * as Storage from '../storage';\n\nexport class ServiceFactory{\n\tprivate static bindTransact(method: string, path: string, transport: Transport, contentType: string | undefined){\n\t\treturn function(this: Service, message: any){\n\t\t\tthis.transact(method, path, transport, contentType, message);\n\t\t};\n\t}\n\n\tprivate static installMethod(service: Storage.Service, prototype: KV<any>, name: string, method: ServiceMethod){\n\t\tprototype[name] = function(this: Service, message: any){\n\t\t\tthis.preflight();\n\n\t\t\tlet methodName = `${service.id}->${method.name}`;\n\t\t\tlet path = method.path;\n\n\t\t\tif(path.startsWith('/'))\n\t\t\t\tpath = path.substring(1);\n\t\t\tif(!method.transport)\n\t\t\t\tthrow new UnsupportedError(`Service method '${methodName}' has no transport`);\n\t\t\tlet transport = method.transport[this.transport!];\n\n\t\t\tif(!transport)\n\t\t\t\tthrow new UnsupportedError(`Service method '${methodName}' has no transport '${this.transport}'`);\n\t\t\tlet scopes = method.scopes;\n\n\t\t\tif(this.scopes){\n\t\t\t\tif(scopes)\n\t\t\t\t\tscopes = scopes.concat(this.scopes);\n\t\t\t\telse\n\t\t\t\t\tscopes = this.scopes;\n\t\t\t}\n\n\t\t\tlet transact = ServiceFactory.bindTransact(\n\t\t\t\tmethod.method,\n\t\t\t\tthis.getFullPath(path),\n\t\t\t\ttransport,\n\t\t\t\ttransport.request ?? this.transport\n\t\t\t);\n\n\t\t\tprototype[name] = transact;\n\n\t\t\treturn transact.call(this, message);\n\t\t};\n\t}\n\n\tstatic create(service: Storage.Service, methods: KV<ServiceMethod>): typeof Service{\n\t\tlet impl = class GeneratedService extends Service{};\n\t\tlet prototype = impl.prototype as any;\n\n\t\tfor(let [name, method] of KV.entries(methods))\n\t\t\tthis.installMethod(service, prototype, name, method);\n\t\treturn impl;\n\t}\n}","import { ClientError, HttpError, InternalServerError, InvalidArgumentError, NetworkError, NotFoundError, PermissionDeniedError, PreconditionFailedError, RateLimitedError, Response, ServerError, TimedOutError, UnavailableError, UnimplementedError, UnsupportedError } from 'js-common';\nimport { InvalidCredentialsError } from '@/oauth';\n\nexport class HttpClients{\n\tprivate constructor(){}\n\n\tstatic makeError(res: Response, message?: string, type?: string){\n\t\tif(type)\n\t\t\tmessage = message ? `${type}: ${message}` : type;\n\t\tif(!message)\n\t\t\tmessage = `HTTP ${res.status}: ${res.statusText}`;\n\t\tswitch(res.status){\n\t\t\tcase 400:\n\t\t\tcase 405:\n\t\t\tcase 413:\n\t\t\tcase 431:\n\t\t\t\treturn new InvalidArgumentError(message);\n\t\t\tcase 401:\n\t\t\t\treturn new InvalidCredentialsError(message);\n\t\t\tcase 403:\n\t\t\t\treturn new PermissionDeniedError(message);\n\t\t\tcase 404:\n\t\t\t\treturn new NotFoundError(message);\n\t\t\tcase 412:\n\t\t\tcase 428:\n\t\t\t\treturn new PreconditionFailedError(message);\n\t\t\tcase 418:\n\t\t\t\treturn new UnsupportedError(message);\n\t\t\tcase 429:\n\t\t\t\treturn new RateLimitedError(message);\n\t\t\tcase 500:\n\t\t\t\treturn new InternalServerError(message);\n\t\t\tcase 501:\n\t\t\t\treturn new UnimplementedError(message);\n\t\t\tcase 502:\n\t\t\t\treturn new NetworkError(message);\n\t\t\tcase 503:\n\t\t\t\treturn new UnavailableError(message);\n\t\t\tcase 504:\n\t\t\t\treturn new TimedOutError(message);\n\t\t\tcase 505:\n\t\t\t\treturn new UnsupportedError(message);\n\t\t}\n\n\t\tif(res.status >= 400 && res.status < 500)\n\t\t\tthrow new ClientError(message);\n\t\telse if(res.status >= 500 && res.status < 600)\n\t\t\tthrow new ServerError(message);\n\t\tthrow new HttpError(message);\n\t}\n}","import { GenericError } from 'js-common';\n\nexport type Scope = string;\nexport type Scopes = Scope[];\n\nexport const Scopes = {\n\tparse(scopes: string){\n\t\treturn scopes.split(' ') as Scopes;\n\t},\n\n\tstringify(scopes: Scopes){\n\t\treturn scopes.join(' ');\n\t}\n};\n\nexport class OAuthError extends GenericError{\n\tconstructor(arg?: any, defaultSimpleMessage = 'Error authenticating with service'){\n\t\tsuper(arg ?? 'Generic OAuth error', defaultSimpleMessage);\n\t}\n}\n\nexport class InvalidCredentialsError extends OAuthError{\n\tconstructor(arg?: any){\n\t\tsuper(arg ?? 'Invalid credentials');\n\t}\n}\n\nexport class UserDeniedError extends OAuthError{\n\tconstructor(arg?: any){\n\t\tsuper(arg ?? 'Authentication rejected by user');\n\t}\n}\n\nexport class UnrecognizedIDClientError extends OAuthError{\n\tconstructor(arg?: any){\n\t\tsuper(arg ?? 'Unrecognized client id');\n\t}\n}\n\nexport class UnauthorizedClientError extends OAuthError{\n\tconstructor(arg?: any){\n\t\tsuper(arg ?? 'Unauthorized client');\n\t}\n}\n\nexport class InvalidScopeError extends OAuthError{\n\tconstructor(arg?: any){\n\t\tsuper(arg ?? 'Invalid scope');\n\t}\n}\n\nexport interface OAuthConfig{\n\tissuer: string; /* OAuth 2.0 Issuer ID */\n\turl?: string; /* URL for public OAuth APIs */\n}\n\nexport interface OAuthClient{\n\tconfig: OAuthConfig;\n\tid: string; /* client id */\n\tsecret?: string;\n\tredirectUri?: string;\n\n\t[key: string]: any;\n}","export class Credentials{}\n\nexport class ApiKey extends Credentials{\n\treadonly key;\n\n\tconstructor(key: string){\n\t\tsuper();\n\n\t\tthis.key = key;\n\t}\n}","import { Credentials } from '@/client/credentials';\nimport { CredentialStore, OAuthIssuer, InvalidCredentialsError, Scopes } from '.';\nimport { ConcurrentPromise } from 'js-common';\nimport * as Storage from './storage';\n\ninterface TokenInit{\n\tid?: string;\n\tissuer: OAuthIssuer\n\ttype?: string;\n\tsecret: string;\n\texpire?: number;\n\tmetadata?: Storage.Metadata;\n}\n\nexport class Token extends Credentials{\n\tid;\n\tissuer;\n\texpire;\n\ttype;\n\tsecret;\n\tmetadata;\n\n\tconstructor(args: TokenInit){\n\t\tsuper();\n\t\tthis.id = args.id;\n\t\tthis.issuer = args.issuer;\n\t\tthis.expire = args.expire;\n\t\tthis.type = args.type;\n\t\tthis.secret = args.secret;\n\t\tthis.metadata = args.metadata;\n\t}\n\n\tget expired(){\n\t\tif(this.expire === undefined)\n\t\t\treturn false;\n\t\treturn Date.now() > this.expire * 1000;\n\t}\n\n\toverride toString(){\n\t\treturn this.issuer.toString(this);\n\t}\n}\n\nexport class RefreshToken extends Token{\n\tconstructor(args: TokenInit){\n\t\tsuper(args);\n\t}\n}\n\ninterface AccessTokenInit extends TokenInit{\n\tclient: string;\n\tscopes: Scopes;\n\trefresher?: RefreshToken;\n}\n\nexport class AccessToken extends Token{\n\tclient;\n\tscopes;\n\trefresher;\n\n\tprivate refreshTask = new ConcurrentPromise(() => this.doRefresh());\n\n\tconstructor(args: AccessTokenInit){\n\t\tsuper(args);\n\n\t\tthis.client = args.client;\n\t\tthis.scopes = args.scopes;\n\t\tthis.refresher = args.refresher;\n\t}\n\n\tprivate assignToken(token: AccessToken){\n\t\tthis.expire = token.expire;\n\t\tthis.type = token.type;\n\t\tthis.secret = token.secret;\n\t\tthis.scopes = token.scopes;\n\t\tthis.metadata = token.metadata;\n\t}\n\n\tprivate async doRefresh(){\n\t\tif(!this.id)\n\t\t\treturn this.assignToken(await this.issuer.refresh(this, this.refresher!));\n\t\tawait CredentialStore.synchronized(this, async (token) => {\n\t\t\tif(token && token.secret != this.secret)\n\t\t\t\tthis.assignToken(token);\n\t\t\telse\n\t\t\t\tthis.assignToken(await this.issuer.refresh(this, this.refresher!));\n\t\t});\n\t}\n\n\trefresh(){\n\t\tif(!this.refresher)\n\t\t\tthrow new InvalidCredentialsError('No refresh token');\n\t\treturn this.refreshTask.run();\n\t}\n\n\trevoke(){\n\t\treturn this.issuer.revoke(this);\n\n\t}\n\n\tget meta(){\n\t\treturn this.metadata ?? this.refresher?.metadata;\n\t}\n}","import { ConcurrentPromise, ExistsError, GenericError, KV, NotFoundError, Promises, Timer, UnavailableError } from 'js-common';\nimport { DefaultOAuthProvider, AccessToken, RefreshToken, Token } from '.';\nimport { Collection, MongoClient, ObjectId } from 'mongodb';\nimport { Config } from '@/index';\nimport * as Storage from './storage';\n\nexport class DatabaseError extends GenericError{\n\tconstructor(arg?: any){\n\t\tsuper(arg, 'Database error');\n\t}\n}\n\nfunction tokenToJson(token: RefreshToken): Storage.RefreshToken;\nfunction tokenToJson(token: AccessToken): Storage.AccessToken;\n\nfunction tokenToJson(token: RefreshToken | AccessToken){\n\tlet json: KV<any> = {\n\t\tid: token.id,\n\t\tissuer: token.issuer.id,\n\t\ttype: token.type,\n\t\tsecret: token.secret,\n\t\texpire: token.expire,\n\t\tmetadata: token.metadata\n\t};\n\n\tif(token instanceof AccessToken){\n\t\tjson.client = token.client;\n\t\tjson.scopes = token.scopes;\n\t\tjson.refresher = token.refresher?.id;\n\t}\n\n\treturn json;\n}\n\nfunction createRefreshToken(token: Storage.RefreshToken){\n\treturn new RefreshToken({\n\t\tid: token.id,\n\t\tissuer: DefaultOAuthProvider.getIssuer(token.issuer),\n\t\ttype: token.type,\n\t\tsecret: token.secret,\n\t\texpire: token.expire,\n\t\tmetadata: token.metadata\n\t});\n}\n\nfunction createAccessToken(token: Storage.AccessToken, refresher?: RefreshToken){\n\treturn new AccessToken({\n\t\tid: token.id,\n\t\tissuer: DefaultOAuthProvider.getIssuer(token.issuer),\n\t\ttype: token.type,\n\t\tsecret: token.secret,\n\t\texpire: token.expire,\n\t\tmetadata: token.metadata,\n\t\tclient: token.client,\n\t\tscopes: token.scopes,\n\t\trefresher\n\t});\n}\n\nabstract class StorageMedium{\n\tabstract setKey(key: string, value: string): void | Promise<void>;\n\tabstract getKey(key: string): string | undefined | Promise<string | undefined>;\n\tabstract deleteKey(key: string): void | Promise<void>;\n\n\tabstract addToken(token: Token): void | Promise<void>;\n\tabstract updateToken(token: Token): void | Promise<void>;\n\tabstract deleteToken(token: Token): void | Promise<void>;\n\n\tabstract getRefreshToken(id: string): RefreshToken | undefined | Promise<RefreshToken | undefined>;\n\tabstract getAccessToken(id: string): AccessToken | undefined | Promise<AccessToken | undefined>;\n\n\tabstract synchronized(access: AccessToken, callback: (token?: AccessToken) => void | Promise<void>): void | Promise<void>;\n\n\tabstract listAllKeys(): Map<string, string> | Promise<Map<string, string>>;\n\tabstract listAllRefreshTokens(): Storage.RefreshToken[] | Promise<Storage.RefreshToken[]>;\n\tabstract listAllAccessTokens(): Storage.AccessToken[] | Promise<Storage.AccessToken[]>;\n}\n\ninterface Lock{\n\tdate: number;\n\tid: string;\n}\n\nclass MemoryStorageMedium extends StorageMedium{\n\tkeys = new Map<string, string>();\n\trefreshTokens = new Map<string, RefreshToken>();\n\taccessTokens = new Map<string, AccessToken>();\n\tlocks = new Map<string, Lock>();\n\n\toverride setKey(key: string, value: string){\n\t\tthis.keys.set(key, value);\n\t}\n\n\toverride getKey(key: string){\n\t\treturn this.keys.get(key);\n\t}\n\n\toverride deleteKey(key: string){\n\t\tthis.keys.delete(key);\n\t}\n\n\toverride addToken(token: Token){\n\t\tif(token instanceof AccessToken)\n\t\t\tthis.accessTokens.set(token.id!, token);\n\t\telse\n\t\t\tthis.refreshTokens.set(token.id!, token);\n\t}\n\n\toverride updateToken(token: Token){\n\t\tvoid token;\n\t}\n\n\toverride deleteToken(token: Token){\n\t\tif(token instanceof AccessToken)\n\t\t\tthis.accessTokens.delete(token.id!);\n\t\telse\n\t\t\tthis.refreshTokens.delete(token.id!);\n\t}\n\n\toverride getRefreshToken(id: string){\n\t\treturn this.refreshTokens.get(id);\n\t}\n\n\toverride getAccessToken(id: string){\n\t\treturn this.accessTokens.get(id);\n\t}\n\n\toverride async synchronized(access: AccessToken, callback: (token?: AccessToken | undefined) => void | Promise<void>){\n\t\tlet lockSuccess = false;\n\t\tlet lockId = new ObjectId().toHexString();\n\t\tlet now;\n\t\tlet token;\n\n\t\tfor(let i = 0; i < 15; i++){\n\t\t\tnow = Date.now();\n\t\t\ttoken = this.accessTokens.get(access.id!);\n\n\t\t\tif(!token)\n\t\t\t\tbreak;\n\t\t\tif(token.secret != access.secret)\n\t\t\t\tbreak;\n\t\t\tlet lock = this.locks.get(access.id!);\n\n\t\t\tif(!lock || lock.date <= now - 20_000){\n\t\t\t\tlock = {\n\t\t\t\t\tid: lockId,\n\t\t\t\t\tdate: now\n\t\t\t\t};\n\n\t\t\t\tthis.locks.set(access.id!, lock);\n\n\t\t\t\tlockSuccess = true;\n\n\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tawait Promises.resolveAfter(2_000);\n\t\t}\n\n\t\tlet error;\n\n\t\ttry{\n\t\t\tawait callback(token);\n\t\t}catch(e){\n\t\t\terror = e;\n\t\t}\n\n\t\tif(lockSuccess || !token){\n\t\t\tlet lock = this.locks.get(access.id!);\n\t\t\tlet holding = lock?.id == lockId;\n\n\t\t\tif(holding || !lock){\n\t\t\t\tif(holding)\n\t\t\t\t\tthis.locks.delete(access.id!);\n\t\t\t\tthis.accessTokens.set(access.id!, access);\n\t\t\t}\n\t\t}\n\n\t\tif(error)\n\t\t\tthrow error;\n\t}\n\n\toverride listAllKeys(){\n\t\treturn this.keys;\n\t}\n\n\toverride listAllRefreshTokens(){\n\t\treturn Array.from(this.refreshTokens.values()).map(token => tokenToJson(token));\n\t}\n\n\toverride listAllAccessTokens(){\n\t\treturn Array.from(this.accessTokens.values()).map(token => tokenToJson(token) as Storage.AccessToken);\n\t}\n}\n\nclass DatabaseStorageMedium extends StorageMedium{\n\turl;\n\tdb;\n\n\tclient!: MongoClient;\n\tkeys!: Collection<{key: string, value: string}>;\n\trefreshTokens!: Collection<Storage.RefreshToken>;\n\taccessTokens!: Collection<Storage.AccessToken>;\n\n\tready?: Promise<void>;\n\tshouldClose = false;\n\toperations = 0;\n\tcloseTimeout;\n\n\tconstructor(url: string, db: string){\n\t\tsuper();\n\t\tthis.url = url;\n\t\tthis.db = db;\n\n\t\tthis.closeTimeout = new Timer({initialTimeout: 10_000}, () => this.destroy());\n\t}\n\n\tcreateIndex(collection: Collection<any>, fields: KV<number | {direction: number, unique?: true}>){\n\t\tlet promises = [];\n\n\t\tfor(let [key, value] of KV.entries(fields)){\n\t\t\tlet options;\n\n\t\t\tif(typeof value == 'object'){\n\t\t\t\tif(value.unique)\n\t\t\t\t\toptions = {unique: true};\n\t\t\t\tvalue = value.direction;\n\t\t\t}\n\n\t\t\tpromises.push(collection.createIndex({[key]: value}, options));\n\t\t}\n\n\t\treturn Promise.all(promises);\n\t}\n\n\tasync initialize(){\n\t\tthis.client = new MongoClient(this.url);\n\n\t\ttry{\n\t\t\tawait this.client.connect();\n\t\t}catch(e){\n\t\t\tthis.close();\n\n\t\t\tthrow new UnavailableError(e);\n\t\t}\n\n\t\tlet db = this.client.db(this.db);\n\n\t\tthis.keys = db.collection('keys');\n\t\tthis.refreshTokens = db.collection('refreshTokens');\n\t\tthis.accessTokens = db.collection('accessTokens');\n\n\t\ttry{\n\t\t\tawait Promise.all([\n\t\t\t\tthis.createIndex(this.keys, {key: {direction: 1, unique: true}}),\n\t\t\t\tthis.createIndex(this.refreshTokens, {id: {direction: 1, unique: true}}),\n\t\t\t\tthis.createIndex(this.accessTokens, {id: {direction: 1, unique: true}, refresher: 1})\n\t\t\t]);\n\t\t}catch(e){\n\t\t\tthis.close();\n\n\t\t\tthrow new DatabaseError(e);\n\t\t}\n\n\t\tthis.closeTimeout.start();\n\t}\n\n\tclose(){\n\t\tthis.ready = undefined;\n\t\tthis.shouldClose = false;\n\t\tthis.closeTimeout.stop();\n\t\tthis.client.close();\n\t}\n\n\tdestroy(){\n\t\tif(this.operations)\n\t\t\tthis.shouldClose = true;\n\t\telse\n\t\t\tthis.close();\n\t}\n\n\tasync setup(){\n\t\tif(!this.ready)\n\t\t\tthis.ready = this.initialize();\n\t\telse{\n\t\t\tthis.closeTimeout.start();\n\t\t\tthis.shouldClose = false;\n\t\t}\n\n\t\treturn this.ready;\n\t}\n\n\trunDbOp<T>(fn: () => Promise<T>){\n\t\tthis.operations++;\n\n\t\tlet promise = this.setup().then(fn).catch((e) => {\n\t\t\tthrow new DatabaseError(e);\n\t\t});\n\n\t\tpromise.catch((e) => {\n\t\t\tconsole.error(`Database operation failed: ${e.stack ?? e.message}`);\n\t\t}).finally(() => {\n\t\t\tthis.operations--;\n\n\t\t\tif(!this.operations && this.shouldClose)\n\t\t\t\tthis.close();\n\t\t});\n\n\t\treturn promise;\n\t}\n\n\toverride setKey(key: string, value: string){\n\t\treturn this.runDbOp(\n\t\t\t() => this.keys.updateOne({key}, {$set: {key, value}}, {upsert: true})\n\t\t) as any;\n\t}\n\n\toverride getKey(key: string){\n\t\treturn this.runDbOp(\n\t\t\tasync () => (await this.keys.findOne({key}))?.value\n\t\t);\n\t}\n\n\toverride deleteKey(key: string){\n\t\treturn this.runDbOp(\n\t\t\t() => this.keys.deleteOne({key})\n\t\t) as any;\n\t}\n\n\toverride addToken(token: Token){\n\t\tlet json = tokenToJson(token);\n\n\t\treturn this.runDbOp(() => {\n\t\t\tlet collection = token instanceof AccessToken ? this.accessTokens : this.refreshTokens;\n\n\t\t\treturn collection!.insertOne(json as any);\n\t\t}) as any;\n\t}\n\n\toverride updateToken(token: Token){\n\t\tlet json = tokenToJson(token);\n\n\t\treturn this.runDbOp(() => {\n\t\t\tlet collection = token instanceof AccessToken ? this.accessTokens : this.refreshTokens;\n\n\t\t\treturn collection!.updateOne({id: json.id}, {$set: json})\n\t\t}) as any;\n\t}\n\n\toverride deleteToken(token: Token){\n\t\treturn this.runDbOp(() => {\n\t\t\tlet collection = token instanceof AccessToken ? this.accessTokens : this.refreshTokens;\n\n\t\t\treturn collection!.deleteOne({id: token.id});\n\t\t}) as any;\n\t}\n\n\toverride getRefreshToken(id: string){\n\t\treturn this.runDbOp(async () => {\n\t\t\tlet token = await this.refreshTokens.findOne({id});\n\n\t\t\tif(!token)\n\t\t\t\treturn undefined;\n\t\t\treturn createRefreshToken(token);\n\t\t});\n\t}\n\n\toverride getAccessToken(id: string){\n\t\treturn this.runDbOp(async () => {\n\t\t\tlet token = await this.accessTokens.findOne({id});\n\n\t\t\tif(!token)\n\t\t\t\treturn undefined;\n\t\t\tlet refresher;\n\n\t\t\tif(token.refresher)\n\t\t\t\trefresher = await this.getRefreshToken(token.refresher);\n\t\t\treturn createAccessToken(token, refresher);\n\t\t});\n\t}\n\n\toverride async synchronized(token: AccessToken, callback: (token?: AccessToken) => void | Promise<void>){\n\t\tawait this.setup();\n\n\t\tlet lockSuccess = false;\n\t\tlet lockId = new ObjectId();\n\t\tlet now;\n\n\t\tlet dbToken;\n\n\t\tfor(let i = 0; i < 15; i++){\n\t\t\tnow = Date.now();\n\n\t\t\ttry{\n\t\t\t\tlet update = await this.accessTokens!.updateOne({\n\t\t\t\t\tid: token.id,\n\t\t\t\t\tsecret: token.secret,\n\t\t\t\t\t$or: [{\n\t\t\t\t\t\tlockDate: {$lte: now - 20_000}\n\t\t\t\t\t}, {\n\t\t\t\t\t\tlockId: null\n\t\t\t\t\t}]\n\t\t\t\t}, {\n\t\t\t\t\t$set: {\n\t\t\t\t\t\tlockId,\n\t\t\t\t\t\tlockDate: now\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\tif(update.matchedCount){\n\t\t\t\t\tlockSuccess = true;\n\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlet doc = await this.accessTokens!.findOne({id: token.id});\n\n\t\t\t\tif(!doc)\n\t\t\t\t\tbreak;\n\t\t\t\tdbToken = createAccessToken(doc);\n\n\t\t\t\tif(dbToken.secret != token.secret)\n\t\t\t\t\tbreak;\n\t\t\t\tawait Promises.resolveAfter(2_000);\n\t\t\t}catch(e: any){\n\t\t\t\tconsole.error(`Failed to acquire lock: ${e.stack ?? e.message}`);\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tlet error;\n\n\t\ttry{\n\t\t\tawait callback(dbToken);\n\t\t}catch(e){\n\t\t\terror = e;\n\t\t}\n\n\t\tif(lockSuccess || !dbToken){\n\t\t\tlet query;\n\n\t\t\tif(lockSuccess){\n\t\t\t\tquery = {\n\t\t\t\t\tlockId,\n\t\t\t\t\tlockDate: now\n\t\t\t\t};\n\t\t\t}else{\n\t\t\t\tquery = {\n\t\t\t\t\tlockId: null,\n\t\t\t\t\tlockDate: null\n\t\t\t\t};\n\t\t\t}\n\n\t\t\ttry{\n\t\t\t\tawait this.accessTokens!.updateOne({id: token.id, ...query}, {$set: {\n\t\t\t\t\t...tokenToJson(token),\n\t\t\t\t\tlockDate: undefined,\n\t\t\t\t\tlockId: undefined\n\t\t\t\t}});\n\t\t\t}catch(e: any){\n\t\t\t\tconsole.error(`Failed to release lock: ${e.stack ?? e.message}`);\n\t\t\t}\n\t\t}\n\n\t\tif(error)\n\t\t\tthrow error;\n\t}\n\n\toverride listAllKeys(){\n\t\treturn this.runDbOp(async () => {\n\t\t\tlet kvs = await this.keys.find().toArray();\n\t\t\tlet map = new Map<string, string>();\n\n\t\t\tfor(let kv of kvs)\n\t\t\t\tmap.set(kv.key, kv.value);\n\t\t\treturn map;\n\t\t});\n\t}\n\n\toverride listAllRefreshTokens(){\n\t\treturn this.runDbOp(() => {\n\t\t\treturn this.refreshTokens.find().toArray();\n\t\t});\n\t}\n\n\toverride listAllAccessTokens(){\n\t\treturn this.runDbOp(() => {\n\t\t\treturn this.accessTokens.find().toArray();\n\t\t});\n\t}\n}\n\nclass FileStorageMedium extends MemoryStorageMedium{\n\tconfig;\n\tsaveTask = new ConcurrentPromise(() => this.saveImpl(), {queueRun: true});\n\n\tconstructor(filename: string){\n\t\tsuper();\n\n\t\ttry{\n\t\t\tthis.config = Config.loadConfigSync(filename);\n\t\t}catch(e){\n\t\t\tif(!(e instanceof NotFoundError))\n\t\t\t\tthrow e;\n\t\t\tthis.config = new Config(filename, {});\n\t\t}\n\n\t\tlet keys = this.config.get('keys') as KV<string> | undefined;\n\n\t\tif(keys)\n\t\t\tthis.keys = KV.toMap(keys);\n\t\tthis.loadTokens(this.refreshTokens, true);\n\t\tthis.loadTokens(this.accessTokens, false);\n\t}\n\n\tloadTokens(map: Map<string, any>, refresh: boolean){\n\t\tlet tokens = this.config.get(refresh ? 'refreshTokens' : 'accessTokens') as any[] | undefined;\n\n\t\tif(!tokens)\n\t\t\treturn;\n\t\tfor(let storageToken of tokens){\n\t\t\tlet refresher;\n\n\t\t\tif(storageToken.refresher)\n\t\t\t\trefresher = this.refreshTokens.get(storageToken.refresher);\n\t\t\tlet token = refresh ? createRefreshToken(storageToken) : createAccessToken(storageToken, refresher);\n\n\t\t\tmap.set(token.id!, token);\n\t\t}\n\t}\n\n\tsaveImpl(){\n\t\tlet refresh = [], access = [];\n\n\t\tfor(let [_, token] of this.refreshTokens)\n\t\t\trefresh.push(tokenToJson(token));\n\t\tfor(let [_, token] of this.accessTokens)\n\t\t\taccess.push(tokenToJson(token));\n\t\tthis.config.set('keys', KV.fromMap(this.keys));\n\t\tthis.config.set('refreshTokens', refresh);\n\t\tthis.config.set('accessTokens', access);\n\n\t\treturn this.config.save();\n\t}\n\n\tasync save(){\n\t\ttry{\n\t\t\tawait this.saveTask.run();\n\t\t}catch(e: any){\n\t\t\tconsole.error(`Failed to save credentials: ${e.stack ?? e.message}`);\n\t\t}\n\t}\n\n\toverride setKey(key: string, value: string){\n\t\tsuper.setKey(key, value);\n\t\tthis.save();\n\t}\n\n\toverride getKey(key: string){\n\t\treturn super.getKey(key);\n\t}\n\n\toverride deleteKey(key: string){\n\t\tsuper.deleteKey(key);\n\t}\n\n\toverride addToken(token: Token){\n\t\tsuper.addToken(token);\n\t\tthis.save();\n\t}\n\n\toverride updateToken(token: Token){\n\t\tsuper.updateToken(token);\n\t\tthis.save();\n\t}\n\n\toverride deleteToken(token: Token){\n\t\tsuper.deleteToken(token);\n\t\tthis.save();\n\t}\n\n\toverride getRefreshToken(id: string){\n\t\treturn super.getRefreshToken(id);\n\t}\n\n\toverride getAccessToken(id: string){\n\t\treturn super.getAccessToken(id);\n\t}\n}\n\nexport class CredentialStore{\n\tprivate static DatabaseStorageMedium = DatabaseStorageMedium;\n\tprivate static medium: StorageMedium;\n\n\tprivate constructor(){}\n\n\tprivate static initialize(){\n\t\tif(this.medium)\n\t\t\treturn;\n\t\tlet url = Config.get('mongodb/url');\n\t\tlet dbName = Config.get('credentials/database');\n\n\t\tif(url && dbName){\n\t\t\tthis.medium = new DatabaseStorageMedium(url, dbName);\n\n\t\t\treturn;\n\t\t}\n\n\t\tlet file = Config.get('credentials/file');\n\n\t\tif(file){\n\t\t\tthis.medium = new FileStorageMedium(file);\n\n\t\t\treturn;\n\t\t}\n\n\t\tconsole.warn('No database to store credentials, using memory');\n\n\t\tthis.medium = new MemoryStorageMedium();\n\t}\n\n\tstatic setKey(key: string, value: string){\n\t\tthis.initialize();\n\n\t\treturn this.medium.setKey(key, value);\n\t}\n\n\tstatic getKey(key: string){\n\t\tthis.initialize();\n\n\t\treturn this.medium.getKey(key);\n\t}\n\n\tstatic deleteKey(key: string){\n\t\tthis.initialize();\n\n\t\treturn this.medium.deleteKey(key);\n\t}\n\n\tstatic addToken(token: Token){\n\t\tlet promise = (async() => {\n\t\t\tthis.initialize();\n\n\t\t\tif(token.id)\n\t\t\t\tthrow new ExistsError('Token already added');\n\t\t\ttoken.id = new ObjectId().toHexString();\n\n\t\t\tif(token instanceof AccessToken && token.refresher && !token.refresher.id)\n\t\t\t\tawait this.addToken(token.refresher);\n\t\t\tawait this.medium.addToken(token);\n\t\t})();\n\n\t\tpromise.catch(() => {});\n\n\t\treturn promise;\n\t}\n\n\tstatic updateToken(token: Token){\n\t\tthis.initialize();\n\n\t\tif(!token.id)\n\t\t\tthrow new NotFoundError('Token not added');\n\t\treturn this.medium.updateToken(token);\n\t}\n\n\tstatic deleteToken(token: Token){\n\t\tlet promise = (async() => {\n\t\t\tthis.initialize();\n\n\t\t\tif(!token.id)\n\t\t\t\tthrow new NotFoundError('Token not added');\n\t\t\tawait this.medium.deleteToken(token);\n\n\t\t\ttoken.id = undefined;\n\t\t})();\n\n\t\treturn promise;\n\t}\n\n\tstatic async getRefreshToken(id: string){\n\t\tthis.initialize();\n\n\t\tlet token = await this.medium.getRefreshToken(id);\n\n\t\tif(!token)\n\t\t\tthrow new NotFoundError(`Refresh token with id '${id}' not found`);\n\t\treturn token;\n\t}\n\n\tstatic async getAccessToken(id: string){\n\t\tthis.initialize();\n\n\t\tlet token = await this.medium.getAccessToken(id);\n\n\t\tif(!token)\n\t\t\tthrow new NotFoundError(`Access token with id '${id}' not found`);\n\t\treturn token;\n\t}\n\n\tstatic synchronized(token: AccessToken, callback: (token?: AccessToken) => void | Promise<void>){\n\t\tif(!token.id)\n\t\t\tthrow new NotFoundError('Token not added');\n\t\tthis.initialize();\n\n\t\treturn this.medium.synchronized(token, callback);\n\t}\n}","import { NotFoundError } from 'js-common';\nimport { OAuthIssuer, OAuthClient } from '.';\nimport * as Storage from './storage';\n\nexport class OAuthProvider{\n\tprivate issuers;\n\tprivate clients;\n\n\tconstructor(){\n\t\tthis.issuers = new Map<string, OAuthIssuer>();\n\t\tthis.clients = new Map<string, OAuthClient>();\n\t}\n\n\tregisterIssuers(issuers: Storage.Issuer[]){\n\t\tfor(let issuer of issuers){\n\t\t\tlet impl = issuer.implementation as any;\n\t\t\tlet instance = new impl(issuer.name, issuer.id);\n\n\t\t\tthis.issuers.set(instance.id, instance);\n\t\t}\n\t}\n\n\tregisterClients(clients: OAuthClient[]){\n\t\tfor(let client of clients)\n\t\t\tthis.clients.set(client.id, client);\n\t}\n\n\tgetIssuer(id: string): OAuthIssuer{\n\t\tlet issuer = this.issuers.get(id);\n\n\t\tif(!issuer)\n\t\t\tthrow new NotFoundError(`Issuer '${id}' not found`);\n\t\treturn issuer;\n\t}\n\n\tgetClient(id: string): OAuthClient{\n\t\tlet client = this.clients.get(id);\n\n\t\tif(!client)\n\t\t\tthrow new NotFoundError(`Client '${id}' not found`);\n\t\treturn client;\n\t}\n}\n\nexport const DefaultOAuthProvider = new OAuthProvider();","import { GenericError } from 'js-common';\nimport { spawn } from 'child_process';\n\nconst electron = require('electron') as any as string;\n\nexport interface IPCMessage{\n\tevent: string;\n\tdata: any;\n}\n\nexport function launch(path: string, options?: any){\n\tlet child = spawn(electron, [path], {\n\t\tstdio: ['ipc', process.stdin, process.stdout]\n\t});\n\n\tlet output: any[] = [];\n\tlet terminated = false;\n\n\tlet message = (message: any) => {\n\t\tswitch(message.event){\n\t\t\tcase 'ready':\n\t\t\t\tif(options){\n\t\t\t\t\tchild.send({\n\t\t\t\t\t\tevent: 'options',\n\t\t\t\t\t\tdata: options\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\tchild.send({event: 'start'});\n\n\t\t\t\tbreak;\n\t\t\tcase 'output':\n\t\t\t\toutput.push(message.data);\n\n\t\t\t\tbreak;\n\t\t}\n\t};\n\n\tlet signalHandler = (signal: NodeJS.Signals) => {\n\t\tterminated = true;\n\n\t\tif(!child.killed)\n\t\t\tchild.kill(signal);\n\t};\n\n\tlet sigintHandler = signalHandler.bind('SIGINT');\n\tlet sigtermHandler = signalHandler.bind('SIGTERM');\n\n\tprocess.on('SIGINT', sigintHandler);\n\tprocess.on('SIGTERM', sigtermHandler);\n\n\treturn new Promise<any[]>((resolve, reject) => {\n\t\tlet close = (code: number | null, signal: string) => {\n\t\t\tprocess.off('SIGINT', sigintHandler);\n\t\t\tprocess.off('SIGTERM', sigtermHandler);\n\n\t\t\tif(terminated)\n\t\t\t\treturn;\n\t\t\tif(code === 0)\n\t\t\t\tresolve(output);\n\t\t\telse if(code !== null)\n\t\t\t\treject(new GenericError(`Child process exited with code ${code}`));\n\t\t\telse\n\t\t\t\treject(new GenericError(`Child process exited with signal ${signal}`));\n\t\t};\n\n\t\tchild.on('message', message);\n\t\tchild.on('close', close);\n\t});\n}","import { DefaultOAuthProvider } from './provider';\nimport { CredentialStore } from './store';\nimport { Config } from '@/index';\nimport { KV } from 'js-common';\n\nimport { hideBin } from 'yargs/helpers';\nimport yargs from 'yargs';\n\nexport class OAuthTools{\n\tprivate static optionsFromCmdLine(){\n\t\tlet args = yargs(hideBin(process.argv)).parseSync() as any;\n\t\tlet client = args._.join(' ');\n\t\tlet scopes = args.scope;\n\n\t\tif(typeof scopes == 'string')\n\t\t\tscopes = [scopes];\n\t\tConfig.use(args.config);\n\n\t\tdelete args.$0;\n\t\tdelete args._;\n\t\tdelete args.scope;\n\t\tdelete args.config;\n\n\t\treturn {\n\t\t\tclient,\n\t\t\tscopes,\n\t\t\targs\n\t\t};\n\t}\n\n\tstatic async login(options: {\n\t\tclient: string;\n\t\tscopes: string[];\n\t\targs: KV<any>;\n\t} = this.optionsFromCmdLine()){\n\t\tlet {scopes, args} = options;\n\n\t\tlet client = DefaultOAuthProvider.getClient(options.client);\n\t\tlet issuer = DefaultOAuthProvider.getIssuer(client.config.issuer);\n\t\tlet token = await issuer.perform(client, scopes, args);\n\n\t\tawait CredentialStore.addToken(token);\n\n\t\treturn token;\n\t}\n}","import { HttpContentType, Payload } from 'js-common';\nimport { BinaryTransport } from './transport/binary';\nimport { JSONTransport } from './transport/json';\nimport { URLFormTransport } from './transport/urlform';\n\nexport interface Transport{\n\treadonly request?: string; /* request content type */\n\treadonly response?: string; /* response content type */\n\n\tencode(message: any): Payload; /* encode request */\n\tdecode(message: Buffer): any; /* decode response */\n}\n\nexport const Transport = {\n\tfrom(type: string): Transport | undefined{\n\t\tswitch(type){\n\t\t\tcase HttpContentType.JSON:\n\t\t\t\treturn JSONTransport;\n\t\t\tcase HttpContentType.URLFORM:\n\t\t\t\treturn URLFormTransport;\n\t\t\tcase HttpContentType.OCTET_STREAM:\n\t\t\t\treturn BinaryTransport;\n\t\t}\n\n\t\treturn undefined;\n\t}\n};","import { HttpContentType } from 'js-common';\n\nexport const BinaryTransport = {\n\trequest: HttpContentType.OCTET_STREAM,\n\tresponse: HttpContentType.OCTET_STREAM,\n\n\tencode: (message: any) => message,\n\tdecode: (message: Buffer) => message\n};","import { HttpContentType, Json } from 'js-common';\n\nexport const JSONTransport = {\n\trequest: HttpContentType.JSON,\n\tresponse: HttpContentType.JSON,\n\n\tencode: (message: any) => Json.encode(message),\n\tdecode: (message: Buffer) => Json.decode(message)\n};","import { HttpContentType, URLParams } from 'js-common';\n\nexport const URLFormTransport = {\n\trequest: HttpContentType.URLFORM,\n\tresponse: HttpContentType.URLFORM,\n\n\tencode: (message: any) => URLParams.toString(message),\n\tdecode: (message: Buffer) => URLParams.toKV(message.toString())\n};","import { Request, Response, URLBuilder } from 'js-common';\n\nexport class ApiRequest extends Request{\n\treadonly url;\n\n\tconstructor(url?: string){\n\t\tsuper();\n\t\tthis.url = new URLBuilder(url);\n\t}\n\n\tget https(){\n\t\treturn this.url.scheme == 'https';\n\t}\n\n\toverride execute(): Promise<Response>{\n\t\treturn super.execute(this.url.href);\n\t}\n}","import { NotFoundError, ParseError, Yaml } from 'js-common';\nimport { readFile, writeFile } from 'fs/promises';\nimport { readFileSync } from 'fs';\n\nexport class Config{\n\tprivate static config: Config;\n\n\tprivate path;\n\tprivate data;\n\tconstructor(path: string, data: any){\n\t\tthis.path = path;\n\t\tthis.data = data;\n\t}\n\n\tstatic async read(path: string){\n\t\tlet contents;\n\n\t\ttry{\n\t\t\tcontents = await readFile(path, 'utf8');\n\t\t}catch(error){\n\t\t\tif((error as any).code == 'ENOENT')\n\t\t\t\tthrow new NotFoundError(`File not found: ${path}`);\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn Yaml.decode(contents);\n\t}\n\n\tstatic readSync(path: string){\n\t\tlet contents;\n\n\t\ttry{\n\t\t\tcontents = readFileSync(path, 'utf8');\n\t\t}catch(error){\n\t\t\tif((error as any).code == 'ENOENT')\n\t\t\t\tthrow new NotFoundError(`File not found: ${path}`);\n\t\t\tthrow error;\n\t\t}\n\n\t\treturn Yaml.decode(contents);\n\t}\n\n\tstatic async write(path: string, data: any){\n\t\tawait writeFile(path, data === undefined ? '' : Yaml.encode(data));\n\t}\n\n\tstatic async loadConfig(path: string){\n\t\treturn new Config(path, await this.read(path));\n\t}\n\n\tstatic loadConfigSync(path: string){\n\t\treturn new Config(path, this.readSync(path));\n\t}\n\n\tstatic use(path?: string){\n\t\tthis.config = this.loadConfigSync(path ?? 'mosaic_config.yaml');\n\t}\n\n\tstatic get(path: string){\n\t\tif(!this.config)\n\t\t\tthis.use();\n\t\treturn this.config?.get(path);\n\t}\n\n\tget(path: string){\n\t\tlet root = this.data;\n\t\tlet split = path.split('/');\n\n\t\twhile(split.length){\n\t\t\tif(root === undefined)\n\t\t\t\treturn undefined;\n\t\t\tif(typeof root != 'object' || root === null)\n\t\t\t\tthrow new ParseError(`Could not read config '${path}'`);\n\t\t\troot = root[split.shift()!];\n\t\t}\n\n\t\treturn root;\n\t}\n\n\tset(path: string, value: any){\n\t\tlet root = this.data;\n\t\tlet split = path.split('/');\n\n\t\tif(root === undefined || root === null)\n\t\t\tthis.data = root = {};\n\t\twhile(split.length > 1){\n\t\t\tlet name = split.shift()!;\n\n\t\t\tif(root[name] === undefined || root[name] === null){\n\t\t\t\troot = root[name] = {};\n\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tif(typeof root[name] != 'object')\n\t\t\t\tthrow new ParseError(`Could not set config '${path}'`);\n\t\t\troot = root[name];\n\t\t}\n\n\t\troot[split.shift()!] = value;\n\t}\n\n\tsave(){\n\t\treturn Config.write(this.path, this.data);\n\t}\n}","import { Config, CredentialStore, OAuthStorage } from '@/index';\nimport { InvalidArgumentError, NotFoundError } from 'js-common';\n\nimport { hideBin } from 'yargs/helpers';\nimport yargs from 'yargs';\n\n(async function(){\n\tlet args = yargs(hideBin(process.argv)).parseSync() as any;\n\tlet output = args._.join(' ') || 'credentials.yaml';\n\n\tConfig.use(args.config);\n\n\tlet credentials;\n\n\ttry{\n\t\tcredentials = Config.loadConfigSync(output);\n\t}catch(e){\n\t\tif(!(e instanceof NotFoundError))\n\t\t\tthrow e;\n\t\tcredentials = new Config(output, {});\n\t}\n\n\tlet url = Config.get('mongodb/url'),\n\t\tdbName = Config.get('credentials/database');\n\tif(!url || !dbName)\n\t\tthrow new InvalidArgumentError('No db to export from. Please set the mongodb/url and credentials/database keys in the config');\n\tlet database = new CredentialStore['DatabaseStorageMedium'](url, dbName)\n\n\tlet keys = await database.listAllKeys();\n\tlet refresh = await database.listAllRefreshTokens();\n\tlet access = await database.listAllAccessTokens();\n\n\tif(!credentials.get('keys'))\n\t\tcredentials.set('keys', {});\n\tif(!credentials.get('refreshTokens'))\n\t\tcredentials.set('refreshTokens', []);\n\tif(!credentials.get('accessTokens'))\n\t\tcredentials.set('accessTokens', []);\n\tfor(let [key, value] of keys){\n\t\tlet existing = credentials.get('keys')[key];\n\n\t\tif(existing == value)\n\t\t\tcontinue;\n\t\tif(existing)\n\t\t\tconsole.warn(`Overwriting existing value for ${key}: ${existing} -> ${value}`);\n\t\tcredentials.get('keys')[key] = value;\n\t}\n\n\tlet refreshTokens = new Map<string, OAuthStorage.RefreshToken>();\n\n\tfor(let token of credentials.get('refreshTokens'))\n\t\trefreshTokens.set(token.id, {...token, _id: undefined});\n\tfor(let token of refresh)\n\t\trefreshTokens.set(token.id!, {...token, _id: undefined} as any);\n\tcredentials.set('refreshTokens', Array.from(refreshTokens.values()));\n\n\tlet accessTokens = new Map<string, OAuthStorage.AccessToken>();\n\n\tfor(let token of credentials.get('accessTokens'))\n\t\taccessTokens.set(token.id, {...token, _id: undefined});\n\tfor(let token of access)\n\t\taccessTokens.set(token.id!, {...token, _id: undefined} as any);\n\tcredentials.set('accessTokens', Array.from(accessTokens.values()));\n\n\tconsole.log(`Exported ${keys.size} keys and ${refresh.length + access.length} tokens`);\n\n\tdatabase.destroy();\n\n\tawait credentials.save();\n})();"]}